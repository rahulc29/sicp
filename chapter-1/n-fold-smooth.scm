(define (compose f g)
  (lambda(x) (f (g x))))
(define (repeated f n)
  (define (iter k result)
    (if (= k n)
	result
	(iter (+ k 1) (compose result f))))
  (iter 1 f))
(define dx 0.00001)
(define (smooth f)
  (lambda(x)
    (/
      (+ (f (- x dx)) (f x) (f (+ x dx)))
      3.0)))
(define (smooth-n f n)
  ((repeated smooth n) f))